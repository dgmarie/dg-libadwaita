$asset_suffix: if($variant == 'dark', '-dark', '');

// Window outline
window.csd,
tabthumbnail.card picture {
  outline: 1px solid $window_outline_color;
}

window {
  &.csd {
    box-shadow: 0 1px 3px 3px transparent,
                0 2px 8px 2px transparentize(black, 0.87),
                0 3px 20px 10px transparentize(black, 0.91),
                0 6px 32px 16px transparentize(black, 0.96),
                0 0 0 1px transparentize(black, .92);
    &:backdrop {
      // the transparent shadow here is to enforce that the shadow extents don't
      // change when we go to backdrop, to prevent jumping windows.
      // The biggest shadow should be in the same order then in the active state
      // or the jumping will happen during the transition.
      box-shadow: 0 1px 3px 3px transparentize(black, 0.91),
                  0 2px 14px 5px transparentize(black, 0.95),
                  0 4px 28px 12px transparentize(black, 0.97),
                  0 6px 32px 16px transparent,
                  0 0 0 1px transparentize(black, .95);
    }
    &.dialog.message {
      box-shadow: 0 2px 8px 2px transparentize(black, 0.93),
                  0 3px 20px 10px transparentize(black, 0.95),
                  0 6px 32px 16px transparentize(black, 0.98),
                  0 0 0 1px transparentize(black, .92);
    }
  }
  // server-side decorations as used by mutter
  &.ssd {
    // just doing borders, wm draws actual shadows
    box-shadow: 0 0 0 1px transparentize(black, .92);
  }
}

// Popover borders
popover {
  > arrow,
  > contents {
    border: 1px solid $popover_border;
    background-clip: border-box;
  }
}

// Give buttons a border for more contrast
button:not(.background-preview-button),
spinbutton,
splitbutton,
entry,
iconview:selected,
window.assistant .sidebar > label.highlight,
menubar > item:selected,
.navigation-sidebar > row:selected {
  box-shadow: inset 0 0 0 1px $button_border;
}

popover.emoji-picker emoji {
  &:focus,
  &:hover,
  &:active {
    box-shadow: inset 0 0 0 1px $button_border;
  }
}

flowbox:not(.background-flowbox) > flowboxchild,
gridview > child {
  &:selected {
    box-shadow: inset 0 0 0 1px $button_border;
  }
}

gridview > child.activatable {
  &:hover,
  &:active{
    box-shadow: inset 0 0 0 1px $button_border;
  }
}

tabbar tab,
modelbutton {
  &:hover,
  &:active,
  &:selected {
    box-shadow: inset 0 0 0 1px $button_border;
  }
}

row {
  &.activatable:hover,
  &.activatable:active,
  &.activatable.has-open-popup {
    box-shadow: inset 0 0 0 1px $button_border;
  }
}

button {
  row {
    &.activatable:hover,
    &.activatable:active,
    &.activatable.has-open-popup {
      box-shadow: none;
    }
  }
}

button,
menubutton,
splitbutton {
  &.suggested-action, &.destructive-action, &.opaque {
    box-shadow: inset 0 0 0 1px $opaque_button_border;
  }
}

.boxed-list,
.card,
.card.button {
  &:dir(ltr), &:dir(rtl) {
    box-shadow: 0 0 0 1px transparentize(black, 0.97),
    0 1px 3px 1px transparentize(black, .93),
    0 2px 6px 2px transparentize(black, .97),
    inset 0 0 0 1px $button_border;

    row {
      &:hover,
      &:active,
      &.has-open-popup {
        box-shadow: none;
      }
    }
  }
}

button.link {
  &,
  &:hover,
  &:active,
  &:checked {
    box-shadow: none;
  }
}

%button_flat {
  box-shadow: none;
  &:hover,
  &.keyboard-activating,
  &:active,
  &:checked {
    box-shadow: inset 0 0 0 1px $button_border;
  }
}

menubutton.flat > button,
splitbutton.flat > menubutton > button,
splitbutton.flat > button,
calendar > header > button,
button.emoji-section.image-button:not(.raised):not(.suggested-action):not(.destructive-action):not(.opaque),
popover.menu button.image-button.model,
popover.menu button.circular.image-button.model,
window.dialog.message .dialog-action-area > button,
spinbutton > button.image-button.up:not(.flat):not(.raised):not(.suggested-action):not(.destructive-action):not(.opaque),
spinbutton > button.image-button.down:not(.flat):not(.raised):not(.suggested-action):not(.destructive-action):not(.opaque),
searchbar > revealer > box .close,
infobar .close,
placessidebar button.sidebar-button,
button.flat {
  @extend %button_flat;
}

headerbar, .toolbar, searchbar > revealer > box, actionbar > revealer > box {
  button:not(.raised):not(.suggested-action):not(.destructive-action):not(.opaque) {
    &.arrow-button,
    &.image-button,
    &.image-text-button {
      @extend %button_flat;
    }
  }
  menubutton:not(.raised):not(.suggested-action):not(.destructive-action):not(.opaque).image-button > button {
    @extend %button_flat;
  }
  splitbutton:not(.raised):not(.suggested-action):not(.destructive-action):not(.opaque) {
    &, button {
      @extend %button_flat;
    }
  }
  .linked button:not(.raised):not(.suggested-action):not(.destructive-action):not(.opaque) {
    &.arrow-button,
    &.image-button,
    &.image-text-button {
      box-shadow: inset 0 0 0 1px $button_border;
    }
  }
  menubutton.raised > button:not(.raised):not(.suggested-action):not(.destructive-action):not(.opaque) {
    &.arrow-button,
    &.image-button,
    &.image-text-button {
      box-shadow: inset 0 0 0 1px $button_border;
    }
  }
  popover {
    button:not(.flat):not(.raised):not(.suggested-action):not(.destructive-action):not(.opaque) {
      &.arrow-button,
      &.image-button,
      &.image-text-button {
        box-shadow: inset 0 0 0 1px $button_border;
      }
    }

    menubutton:not(.flat):not(.raised):not(.suggested-action):not(.destructive-action):not(.opaque) {
      &.image-button > button {
        box-shadow: inset 0 0 0 1px $button_border;
      }
    }
  }
}



columnview.view,
treeview.view {
  > header > button {
    box-shadow: none;
  }
}

// macOS window buttons. Most of this (including the images that are used here) is borrowed from https://github.com/vinceliuice/WhiteSur-gtk-theme
windowcontrols:not(.empty) {
  &.start, &.end {
    margin: 0 6px 0 7px;
  }
  button {
    margin: 0 1px 0 0;
    padding: 0;
    background-position: center;
    background-repeat: no-repeat;
    background-size: 16px 16px;
    box-shadow: none;
    color: transparent;
    min-width: 16px;
    min-height: 16px;
    @each $k in ('close', 'maximize', 'minimize') {
      @each $l, $m in ('',''), (':backdrop','-backdrop'), (':backdrop:hover','-backdrop-hover'), (':hover','-hover'), (':active','-active') {
        &.#{$k}#{$l} {
          background-image: -gtk-scaled(url('mac-icons/titlebutton-#{$k}#{$m}#{$asset_suffix}.png'),
                                       url('mac-icons/titlebutton-#{$k}#{$m}#{$asset_suffix}@2.png'));
        }
      }
    }
  }
  .fullscreen &,
  .maximized & {
    button {
      @each $l, $m in ('',''), (':backdrop','-backdrop'), (':backdrop:hover','-backdrop-hover'), (':hover','-hover'), (':active','-active') {
        &.maximize#{$l} {
          background-image: -gtk-scaled(url('mac-icons/titlebutton-restore#{$m}#{$asset_suffix}.png'),
                                       url('mac-icons/titlebutton-restore#{$m}#{$asset_suffix}@2.png'));
        }
      }
    }
  }
}